*scene_list
	startup
	manager
	ending

As you walk upstairs, you notice the sudden drop in temperature. Photos of employees at various staff events line the left hand side walls of the corridor leading to the managers office. They look amateur and some are nearly impossible to make out, but everyone is smiling and having a great time. You approach the door to Chris' office, what do you want to do?
*choice
	#Follow the manager into his office.
		*label manager
		The manager opens the door and suddenly a sweet smell envelops your senses which remind you of happy childhood memories. The room itself however, looks nothing like the rest of the office. In fact it looks unfinished and a bit barron. To avoid potentially insulting Chris you hide your true feelings and say:
		*choice
			#What a lovely office you have.
				Chris replies: "Heh, you honestly don't have to say that ${name}, I am fully aware this looks like a basement. It's on the to-do list, the other rooms such as the main office needed finishing first".
				*choice
					#It does look a little depressing in here, why did you make this your office?
						"Truth is I disslike being separate from the rest of the team, but nobody else fancied up here and it made sense for me to take it. I have got the interior decorator coming around next week though, everyone's going to wish they had this office by the end of it!".
						*goto business
					#How long has it been like this for?
						"Oh not long we only moved into this office one month ago, but it's really beginning to agitate me now having to work in this space. Next week an interior decorator will be around to help fix it up".
						*goto business
			#What a pleasant smell, it's really bringing back some amazing memories.
				Chris replies: "Glad you like it. It's a freshly cut grass smell... well I have to make this office pleasant in some way. As you can tell it's unfinished, but it's usually only me in here so it doesn't need to be fancy looking unlike downstairs. Don't worry though, I'm going to have an interior decorator come in and transform this into a paradise!".
				*choice
					#Say: I look forward to the finished product.
						*label business
						"Yeah hopefully soon this place will look complete! But enough of that, let's get down to business. You have arrived here to understand more about me. So what is it you wish to expand in particular?".
						*choice
							#Ask: Are you the greatest developer of all time?
								*label shadowing
								"A typical dev answer would be that is that anything is possible given enough time, however I would say that is an incredibly ambiguous question! There are many aspects to programming and/or more generally, development. If you wanted to break it down, what in your opinion are tendancies of a great developer"?
								*choice
									#Ability to debug, improve on and maintain existing applications / software.
										"Yes, this is very important. A good dev would be able to backward engineer, instrument techniques to log information, gain context around the issue and provide potential work-arounds that may simplify problems".
										*choice
											#Respond: Yeah This sounds like an important feature of being a developer, would you say this is the most important?
												"A fantastic question, yes I would personally say this is amongst one of the most important aspects of development. Not everyone is lucky enough to enter a project at the start. Although I like to push the phrase: Keep It Simple Stupid (KISS), not everyone does so".
												*choice
													#Ask: Do you KISS all your employees?
														"Only the devs! Nobody wants a crazy cowboy that writes unlegible code, even if it is good. It needs to be re-usable and well documented for others sake".
														*goto doccode
													#Ask: Is this how you started out?
														"Not really ${name}, I started out in front-end development but got more into this as I progessed."
														*goto backend
											#Respond: What level of developer would be able to do this? 
												"A great question, all levels to some varying degree but this can be difficult so these tasks tend to rest in the hands of the back-end developers and tech leads mainly".
												*choice
													#Ask: Is this what you would consider yourself?
														"Not only ${name}"
														*goto backend
													#Ask: Is this how you started out?
														"Not really ${name}, I started out in front-end development but got more into this as I progessed."
														*goto backend
									#Ability to scope applications / software from the ground up.
										"Yes, this is very important. A common phrase is that if you fail to plan then you plan to fail. Planning is a tricky area. Really you learn from experience, but a good functional spec, an ability to communicate complexities to non-specialists, limit design time, have a solid development process with a centraliased dev site, UAT/staging server, using a combination Agile and Waterfall methodologies."
										*choice
											#Ask: How do you achieve both waterfall and agile methodologies?
												"Good question, I like ideas of Agile such as co-location, partner programming and scrums but some processes of development have to be quite linear in my opinion such as design, coding and testing. Being strict and clear with requirements before implementation starts is crucial in order to stop redesign, redevelopment, and retesting".
												*finish
											#Ask: How do you achieve a solid development process for your devs?
												*label sysadmin
												"Yes ${name}, after a requirement analysis is approved by the client. We take a modular approach so common functionality can be reused, tech leads then scope complex unique tasks. Tasks are distributed, devs code locally then push to a central dev server using version control and tested. Once passed it is deployed to staging for UAT before production."
												*choice
													#Ask: How do you get around developer individual differences?	
														"Well creating an identical environment for all developers in the office is critical which is why I choose Docker to achieve this, docker removes the 'That doesn't happen on my computer issue' which saves many headaches". 
														*choice
															#Ask: do all devs use docker? I've heard it's hard to get your head around.
																"True, but I create lots of documentation and shortcut scripts which minimise the work required for other devs around the docker environment".
																*goto doccode
															#Ask: Nice what environments have you built with docker?
																"I've written and used docker-compose images for Laravel, Node.Js NPM, Wordpress, Magento all with the webserver, workspace, database, LetsEncrypt, Nginx Proxies and other services in separate containers".
																*finish
													#Ask: Specifically which server software do you use?
														"I have used loads of open source tools for server deployment, server set-up, server configuration, using many hosting companies either command line based or graphical user interface based. I prefer Linux based OS with Bash, for security we use LetsEncrypt. Nginx is the choice webserver and the CRON tab for scheduled tasks".
														*choice
															#Ask: So what are the main areas you are not so competent in?
																"Like all of these roles, they are deep enough to have specialists. There are areas which I am still exploring such as: the deep ocean of networking, the phyical side of building computers and it's components, system recovery, complex server clusters/architechures, setting up email servers, load balancers and of course the security around all of this.
																*finish
															#Ask: Very nice, how about your front-end skills?
																"Of course ${name}".
																*goto frontend
															#Ask: Very nice, how about your back-end skills?
																"Of course ${name}".
																*goto backend
									# Ability to stay up to date with software trends and implement them into the businsess.
										"Yes, this is very important. It's easy to stay on top of new developments within the platforms used in the workplace everyday but harder for the more generic tech world. I utilise RSS feeds and pull from BBC Science, Hacker News, Inchoo, Mashable Tech, Tech Crunch, Magento and PHP Sub-Reddits"
										*choice 
											#Say: Nice! I'll be sure to document this and use it for my own.
												"No problem man! On the subject of code documentation:"
												*goto doccode
											#Ask: Keen on Magento specifically then?
												*label magento2
												"Magento 2 is the choice platform for large scale eCommerce wanting to integrate with other softwares such as Point Of Sales (POS) or Customer Relationship Management (CRM) systems. Whether you like it or not it pretty much has a monopoly in this field".
												*choice
													#Ask: What's the difference between 1 and 2?
														"The whole architecture of Magento 2 is vastly different from Magento 1. Magento 2 betters CLI, Dependency Injection,      ...........................                and thus requires a steep learning curve. Changing from version 1 to 2 is more of a process than an upgrade. As a result, the development has changed considerbly".
														*choice
															#Say: That must've annoyed the Magento community.
																"Yes, and the marketplace is still emerging which means some features that used to exist in Magento 1 via extensions would require custom integration for Magento 2. As a result, Magento 1 might still be the best solution depending on your clients needs. Sooner or later however, Magento will stop security patches for versions 1.X. The faster you can progress to Magento 2, the better".
																*goto magentolovehate
															#Say: I see so really they are 2 separate beasts.
																"There are some changes in it's design pattern. Magento was previously considered MVC, now it could be considered MVVM - where the Magento block object acts as the ViewModel. Views (phtml files) are now responsible for fetching their information from the ViewModel. There are still many similarities however, such as: XML configuration files, themes, modules etc. It really is a beast, but I love it".
																*goto magentolovehate
													#Say: I'm not a fan of Magento.
														"I must admit the change from version 1 to 2 has shaken this community, but when do you ever stop learning in this industry? The improvements are worth learning. Having said that, people in this office share your views. Firstly it's bloated. There are too many configuration files which makes more room for annoying bugs. It also makes your code less concise and more difficult to debug. Secondly, the documentation is bad and you often find yourself reverse-engineering. Thirdly, the server costs involved in hosting such a solution are considerable. However, while WooCommerce or Shopify might be decent solutions for smaller companies, larger companies would require the complexities that Magento offers. We are experts in PHP, and now more than 25% of eCommerce shops worldwide run on some version of Magento. There really isn't an alternative for us".
														*goto magentolovehate
													#Suggest: What about WooCommerce?
														"This once was a favourite of mine for open-source eCommerce, but really this is only applicable to smaller businesses and Magento is feature rich from the ground up as an eCommerce platform. We must still remember WooCommerce is based on a blog."
														*goto magentolovehate
													#Suggest: What about Shopify
														"Shopify have released Shopify Plus which is closing the gap between Shopify and Magento, but there are still differences enough to say Shopify is for smaller / medium businesses or businesses without specialised needs. Magento is feature rich open source platform whereas Shopify is completely closed Software As A Service (SaaS)".
														*choice
															#Ask: What kind of features?
																"Magento can handle multi store, multi currency. It has a big community of support for users, and it is open source meaning it has more flexibility and expansion from the power of the crowd".
															#Say: Don't you find Shopify works better?
																"A common misconception. Yes, it is easier to break Magento than Shopify. This mainly because you get access to the core source code. I would argue that this is bad development rather than a worse platform. You have to understand that you can modify almost anything with Magento within reason and as they say: more power comes more responsibility"!
																*goto magentolovehate
													#Ask: So you like Magento then?
														*magentolovehate
														"Its a love hate relationship with Magento, it has taken a while to get to grips with it but it has both nice and horrid features".
														*choice
															#Ask: gimmie some horrid features of Magento 2
																"It entirely relies on caches and the overuse of them makes debugging a pain sometimes. Application Cache spread over: Layout, Configuration, Output, DDL, Config, Reflection, Translations, Integrations, Web services, Notifications and then on top of that you have FPC such as Varnish, Script caching such as Opcache, DNS, Browser, Proxy, Gateway, Distributed for DBs and CDNs... Caching man!"
																*finish
															#Ask: Gimmie some nice features
																"Magento 2 Dependency Injection is a fantastic concept which works well. The modular approach is also very nice. I have grown to love the way the indexers compute complex tasks do away with flat table design and the progressive web app separates the frontend from the backend which I think is nice".
																*finish
									# Ability to write good, clean, legible, reusable and well documented code.
										*label doccode
										"Yes, it's very important to document. We have wiki's that are constantly updated at Portchris, we teach Object Oriented programming utilising architechures such as Model-View-Controller, Model-View-ViewModel, Event-Driven and Model-View-Whatever actually"
										*choice
											#Ask: Model-View-Controller?
												"Specifically, this is a well established architecture and is found in many platforms such a Magento 1"
											#Ask: Model-View-ViewModel?
												"This is a more newly adopted pattern being used, platforms such as Magento 2 could be considered MVVM"
												*choice
													#Say: Magento 2, cool
														"Yeah it is useful for our larger clients that which to sell online."
														*goto magento2
													#Say: Magento 2, not a fan
														"Magento has come a long way and like most platforms over 10 years old, it carries baggage."
														*goto magento2
											#Ask: Event-Driven?
												"This is both old and new, Wordpress is rather event driven for example. At the same time newer frameworks such as React JS utilise a more event driven approach with it's detection, consumption and reaction of events signified by states".
												*choice
												#Ask you prefer front-end?
													*label frontend
													"Well I am currently marketing myself as a full stack developer, part of the reason I do this because I like front and back-end equally."
													*choice
													#Ask: Okay then, what about front-end do you like specifically?	
														"Specifically: HTML5, CSS, CLI web workflows, CLI package managers, JavaScript including ES5/ES6/TypeScript, RESTful integration, SEO/social implementation and front-end optimisation".
														*choice
															#Ask: What areas in front-end do you disslike?
																"Oh of course ${name}, I'd be lying if we said I was a master in this area; you learn all the time. I'm not the biggest fan of creating Email templates and that's mainly because of Outlook! I'm also not the biggest fan of CSS pre-processors such as SASS, certain functionality such as mixins are fine but the outputted CSS is often over quite large (despite being minified) and even though it's meant to improve workflow I have often found nested elements from hell which begs to differ! 
																*choice
																	Ask: What about areas you are not so competent in?
																		"There are areas which I am still exploring such as: Front-end UI testing and automated testing, enhancing our UX/UI, enhancing our design skills, enhancing our TypeScript/ES6 skills, keeping track of all the extensive amount of emerging libraries/frameworks and the advancing 3D world of WebGL."
																		*finish
																	State: Generally I feel CSS pre-processors do better workflow and output better CSS for production
																		"Of course, in the end it's all down to the individual skill level, but if they are particularly junior then you could argue that adding the complication of CLI bundling tools such as webpack hard to grasp."
																		*finish
															#Ask: Very nice, so about back-end?
																"Of course ${name}".
																*goto backend
															#Ask: Very nice, so sys-admin?
																"Of course ${name}".
																*goto sysadmin
													#Ask: What does full stack even mean these days?
														*label fullstack
														"A great question. I agree, the term is certainly becoming muddled especially with the introduction of more complex workflows, patterns, architechures and softwares that constitute the web. Therefore it is a generic term and I believe can be defined simply by: Being capable of creating/maintaining a web project from start to finish across all aspects, front-end, back-end and system admin."
														*choice
															#Ask: Cool, tell me more about front-end?
																"Of course ${name}".
																*goto frontend
															#Ask: Cool, tell me more about back-end?
																"Of course ${name}".
																*goto backend
															#Ask: Cool, tell me more about sys-admin?
																"Of course ${name}".
																*goto sysadmin
												#Ask you prefer back-end?
													*label backend
													"Well I am currently marketing myself as a full stack developer, part of the reason I do this because I like back and front-end equally."
													*choice
														#Ask: Okay then, what about back-end do you like specifically?	
															"Specifically I have knowledge in: many frameworks/platforms, HTTP Request methods with a decent understanding of the security around it, PHP 7 + 8 languages, doing semi-complex logical calculations using the MVC, MVVM, MVW Object Oriented & CRUD methodologies/patterns, Relational and Non-Relational Database Management Systems including semi-complex SQL querying, sessions, cookies, creating RESTful APIs with authentication such as JSON Web Tokens (JWT), webserver configuration with both Apache and Nginx, version control and aspects of testing using PHPUnit.
															*choice
																#Say: There must be areas in back-end you are not so competent in.
																	"Oh of course ${name}, I'd be lying if I said I was a master. The more you learn the more you realise you don't know. There are areas which I am still exploring such as: event-driven asynchronous multi-threaded server-side development, enhancing our unit testing/end-to-end/automated testing skills, continuous integration, big data management, enhancing my non-relational database knowledge and of course the security around all of this".
																	*choice
																		#State: Are there areas that you dislike?
																			"Yeah of course ${name}, web development is so vast that you cannot cover all tools, platforms etc, don't even ask me about Microsoft IIS! I'm also not the greatest fan of the various types of caches"	
																			*choice
																				#Ask: What's wrong with Microsoft IIS?
																					"It's not that I dislike it so much, but I have little experience in it"
																					*finish
																				#Ask: What's wrong with caching?
																					"I understand it reduces overall network traffic and latency, but just the sheer number of caches available for web and the overuse of them makes debugging a pain sometimes. Take Magento 2 for example, Application Cache spread over: Layout, Configuration, Output, DDL, Config, Reflection, Translations, Integrations, Web services, Notifications and then on top of that you have FPC such as Varnish, Script caching such as Opcache, DNS, Browser, Proxy, Gateway, Distributed for DBs and CDNs... Caching man!"
																					*finish
																#Ask: Very nice, how about your front-end skills?
																	"Of course ${name}"
																	*goto frontend
																#Ask: Very nice how about your sys-admin skills?
																	"Of course ${name}"
																	*goto sysadmin
											#Ask: Model-View-Whatever?
												"Something coined by Angular JS to be honest. It's basically the ability to support multiple paradigms of your  choice".
												*choice
													#State: It's nice they give you the choice.
														"Yeah it's a nice framework, in fact this site is built using it, like what you see? It's a little more bulky and harder to learn than Knockout or React + the shift from 1 to 2 really shook the community, but I like the feature rich functionality and 2 way data binding in particular."
														*goto frontend
													#Ask: So does this make you like Angular JS?
														"Yeah it's a nice framework, in fact this site is built using it, like what you see? It's a little more bulky and harder to learn than Knockout or React + the shift from 1 to 2 really shook the community, but I like the feature rich functionality and 2 way data binding in particular."
														*goto frontend
							#Ask: What projects do you currently have on?
								"Mostly Magento 2 projects right now. Internally we are working various things from Spotify apps to Online Multiplayer Games".
								*choice
									#Say: Magento?
										"Yeah a great platform for larger business looking for complex solutions to eCommerce"
										*goto magento2
									#Say: Online Multiplayer Games?
										"I knew that would tickle your fancy, yes"
									#Say: Spotify apps?
										"Ah yes,"
													
																		
							#Ask: What do you guys do for fun?
								"Lots, every lunch time I arrange an activity so it get's everyone out of their seats. I also put aside an activity budget each month for people to vote on and every once in a while I'll subsidise a work trip abroad".
								*choice
									#Ask: Abroad sounds nice, where have you been so far?
										"Well so far we have been to: Europe, North America, Asia and Australasia".
										*choice
											#Reply: Woah that's a crazy amount of continents. Why so many and so varied?
												"I believe that travelling is the best way to gain an insight into and appreciation for other cultures. Most of the trips have been for leisure, but occasionally they have been for work and they are the best kind of team bonding exercise! We are a family now and have been through some amazing times together".
												*finish
											#Where's the next?
												"There are a few working opportunities in Australia worth applying for...".
												*finish
									#Say: That's cool, what kind of activities have you done in the past?
										"Anything from surfing to go-karting. I usually suggest something and the office will give me their opinion. I personally prefer anything involving the water. We have also arranged some great events indoors too, however".
										*choice
											#What kind of watersports?
												"I love surfing but am still learning. We are looking into kite-surfing for our next adventure. Not sure the office will agree though!".
												*finish
											#What kind of indoor events?
												"We love hackathons, the atmosphere is great and it gives me and excuse to buy some craft ales to tick off of my list!".
												*choice 
													#Ask: List?
														"I got a gift from my father-in-law, '1001 beers you must try before you die' and I have been trying to tick them off of the list ever since".
														*finish
													#Ask: What kind of ales?
														"My favourite so far is the Left-handed Milk Stout. Give it a try. I got a gift from my father-in-law, '1001 beers you must try before you die' and I have been trying to tick them off of the list ever since".
														*finish
									#Ask: How did you get to this position Chris?
										"A good question. I went to university with a vague love for media and art. Here I was introduced to world of programming where I quickly grew to love it's ability to bring things to life. I decided to start a business with a colleague to continue creating the things I loved, unfortunately this venture didn't work out and I was forced to get a real job like the rest of us! Luckily, I was offered positions that gave me fantastic insight across all areas of web development. I've gained almost a decade of valuable experience and I've travelled the world whilst I did it to experience work in other countries, and here I am today!".
										*choice
											#Ask: Which uni did you attend?
												"I went to the University of Bournemouth to study Interactive Media Production where I recieved a 2:1 BA Hons degree".
												*choice
													#Congratulate Chris.
														You give your congratulations. Chris replies: "That's really nice of you to say ${name}".
														*finish
													#Praise Chris.
														You start praising Chris. Chris replies: "That's really nice of you to say ${name}".
														*finish
													#You realise you want to be just like Chris.
														You start to explain how you want to be just like Chris. Chris replies: "That's really nice of you to say ${name}".
														*finish
											#Say: Travelling sounds a little counter-productive to me.
												"Not at all, in my personal experience it has enabled me to further expand my knowledge by offering more opportunities. I am not limited by my location".
												*finish
											#Ask: What happended to the business?
												"In the beginning the business looked really promising. We acquired offices in the middle of Bournemouth and we had a few small projects with notable clients. Dry spells however, can really harm a start-up company like ours. Unfortunately most business' fail in their first year and we were no exception. Having just come out of university we had much debt, couple that with the cost of starting a business and we quickly realised we couldn't continue like this. I loved the opportunity and it taught me a lot, but I was thankful to get out and focus on the coding".
												*finish																		
									
							#Ask: Are you the greatest hacky-sacker of all time?
								"Absolutely, I'm much better than Sam downstairs"
								*goto business
					#Ask: How do you achieve that smell?
						"That living wall in the corridor outside gets trimmed regularly. It also has very fragrant flowers designed to attract bees, so if you're allergic then be careful!".
						*goto business
	#Read the sign on the door.
		It's a picture of a crane standing on a turtles back.
		*choice
			#Ask Chris: Why is this on your office door?
				Chris replies: "In China it is a symbol of long life, which is what I want for PortChris of course. Also the door itself really suited the office well. Anyways come on in".
				*goto manager
			#Say to Chris: I don't like this, it makes me sad.
				Chris replies: "Don't be sad! It's a good luck charm. If you hate it that much I'll remove it, I'm not obsessed with it. Well you might as well come on in rather than looking at this thing!".
				*goto manager
	#Hang around for a moment and admire the other side of the wall.
		You admire the other side of the corridor - the living wall. There are all kinds of plants here including: Venus Fly Trap, Pitcher plants, Orchids and many more. Chris steps in and says: "Awesome plants aren't they, they're carnivorous so they keep the flies away. I'm free to leave the windows open as I please!".
		*choice
			#Ask: Does that explain the cold?
				"No, actually these plants grow naturally in cloud rainforest climates. Therefore I have to drop the temperature slightly to keep them alive!".
				*choice
					#Say: A small trade-off for such a beautiful wall!
						Chris says: "Absolutely! But it's warmer in my office, come on in".
						*goto manager
					#Say: I see, I couldn't handle that personally.
						Chris replies: "Haha, well you wait until you see my office then".
						*goto manager
			#Ask: Why on earth are such plants in the office?
				"Ever had writers block ${name}? If you're ever stuck on something, come up here. These plants combined with the fresh air will garner all your answers. Look at us now for example, we are just standing here rather than being in the office. It works. Anyway let's go inside".
				*goto manager
			#Ask: What are these photos of?
				"The PortChris team on work events. This is our memory lane. All of these photos are terrible quality but they capture a particular moment. These were mainly taken on the designers' polaroid camera..."
				*choice
					#Ask: What's this one about?
						"It doesn't look like it but that's us doing a tandem bungie in Turkey. Sometimes I subsidise work trips abroad".
						*choice
							#Say: That's generous of you.
								"Ultimate team bonding exercise, and it's fun to visit other cultures. Anyway ${name} step into my office".
								*goto manager
							#Say: When's the next trip abroad?
								"Thinking of going to China, the only problem is it's huge and I'm not content on just doing a city visit. I'll talk it over with the others, perhaps you can join us! We'll talk about it more in the office. Come in".
								*goto manager
					#Say: Cool! When's the next one?
						"We are currently arranging a meal out. Do you like Zorbing? We'll talk more inside. Come on in!".
						*goto manager